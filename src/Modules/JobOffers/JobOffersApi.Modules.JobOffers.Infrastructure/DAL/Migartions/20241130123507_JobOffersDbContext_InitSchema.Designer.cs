// <auto-generated />
using System;
using JobOffersApi.Modules.Users.Infrastructure.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JobOffersApi.Modules.JobOffers.Infrastructure.DAL.Migartions
{
    [DbContext(typeof(JobOffersDbContext))]
    [Migration("20241130123507_JobOffersDbContext_InitSchema")]
    partial class JobOffersDbContext_InitSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("jobOffers")
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("JobAttributeJobOffer", b =>
                {
                    b.Property<Guid>("JobAttributesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("JobOffersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("JobAttributesId", "JobOffersId");

                    b.HasIndex("JobOffersId");

                    b.ToTable("JobAttributeJobOffer", "jobOffers");
                });

            modelBuilder.Entity("JobOffersApi.Modules.JobOffers.Core.Entities.JobApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("CV")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CandidateFirstName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("CandidateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CandidateLastName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("JobOfferId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MessageToEmployer")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PreferredContract")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("JobOfferId");

                    b.ToTable("JobApplications", "jobOffers");
                });

            modelBuilder.Entity("JobOffersApi.Modules.JobOffers.Core.Entities.JobAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("JobAttributes", "jobOffers");
                });

            modelBuilder.Entity("JobOffersApi.Modules.JobOffers.Core.Entities.JobOffer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DescriptionHtml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ExpirationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.HasKey("Id");

                    b.ToTable("JobOffers", "jobOffers");
                });

            modelBuilder.Entity("JobAttributeJobOffer", b =>
                {
                    b.HasOne("JobOffersApi.Modules.JobOffers.Core.Entities.JobAttribute", null)
                        .WithMany()
                        .HasForeignKey("JobAttributesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobOffersApi.Modules.JobOffers.Core.Entities.JobOffer", null)
                        .WithMany()
                        .HasForeignKey("JobOffersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JobOffersApi.Modules.JobOffers.Core.Entities.JobApplication", b =>
                {
                    b.HasOne("JobOffersApi.Modules.JobOffers.Core.Entities.JobOffer", "JobOffer")
                        .WithMany("JobApplications")
                        .HasForeignKey("JobOfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("JobOffersApi.Modules.JobOffers.Core.Entities.ValueObjects.FinancialCondition", "FinancialExpectations", b1 =>
                        {
                            b1.Property<Guid>("JobApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("SalaryPeriod")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");

                            b1.Property<string>("SalaryType")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.HasKey("JobApplicationId");

                            b1.ToTable("JobApplications", "jobOffers");

                            b1.WithOwner()
                                .HasForeignKey("JobApplicationId");

                            b1.OwnsOne("JobOffersApi.Abstractions.Core.Money", "Value", b2 =>
                                {
                                    b2.Property<Guid>("FinancialConditionJobApplicationId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<decimal>("Amount")
                                        .HasColumnType("decimal(18,2)");

                                    b2.Property<string>("Currency")
                                        .IsRequired()
                                        .HasMaxLength(10)
                                        .HasColumnType("nvarchar(10)");

                                    b2.HasKey("FinancialConditionJobApplicationId");

                                    b2.ToTable("JobApplications", "jobOffers");

                                    b2.WithOwner()
                                        .HasForeignKey("FinancialConditionJobApplicationId");
                                });

                            b1.Navigation("Value")
                                .IsRequired();
                        });

                    b.OwnsOne("JobOffersApi.Modules.JobOffers.Core.Entities.ValueObjects.Disposition", "Disposition", b1 =>
                        {
                            b1.Property<Guid>("JobApplicationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Availability")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<DateTime?>("Date")
                                .HasColumnType("date");

                            b1.HasKey("JobApplicationId");

                            b1.ToTable("JobApplications", "jobOffers");

                            b1.WithOwner()
                                .HasForeignKey("JobApplicationId");
                        });

                    b.Navigation("Disposition")
                        .IsRequired();

                    b.Navigation("FinancialExpectations");

                    b.Navigation("JobOffer");
                });

            modelBuilder.Entity("JobOffersApi.Modules.JobOffers.Core.Entities.JobOffer", b =>
                {
                    b.OwnsMany("JobOffersApi.Modules.JobOffers.Core.Entities.ValueObjects.FinancialCondition", "FinancialConditions", b1 =>
                        {
                            b1.Property<Guid>("JobOfferId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"), 1L, 1);

                            b1.Property<string>("SalaryPeriod")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");

                            b1.Property<string>("SalaryType")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.HasKey("JobOfferId", "Id");

                            b1.ToTable("JobOffers_FinancialConditions", "jobOffers");

                            b1.WithOwner()
                                .HasForeignKey("JobOfferId");

                            b1.OwnsOne("JobOffersApi.Abstractions.Core.Money", "Value", b2 =>
                                {
                                    b2.Property<Guid>("FinancialConditionJobOfferId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("FinancialConditionId")
                                        .HasColumnType("int");

                                    b2.Property<decimal>("Amount")
                                        .HasColumnType("decimal(18,2)");

                                    b2.Property<string>("Currency")
                                        .IsRequired()
                                        .HasMaxLength(10)
                                        .HasColumnType("nvarchar(10)");

                                    b2.HasKey("FinancialConditionJobOfferId", "FinancialConditionId");

                                    b2.ToTable("JobOffers_FinancialConditions", "jobOffers");

                                    b2.WithOwner()
                                        .HasForeignKey("FinancialConditionJobOfferId", "FinancialConditionId");
                                });

                            b1.Navigation("Value")
                                .IsRequired();
                        });

                    b.OwnsOne("JobOffersApi.Modules.JobOffers.Core.Entities.Location", "Location", b1 =>
                        {
                            b1.Property<Guid>("JobOfferId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("ApartmentNumber")
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("HouseNumber")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.Property<string>("PostalCode")
                                .HasMaxLength(15)
                                .HasColumnType("nvarchar(15)");

                            b1.Property<string>("Street")
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.HasKey("JobOfferId");

                            b1.ToTable("JobOffers", "jobOffers");

                            b1.WithOwner()
                                .HasForeignKey("JobOfferId");
                        });

                    b.Navigation("FinancialConditions");

                    b.Navigation("Location")
                        .IsRequired();
                });

            modelBuilder.Entity("JobOffersApi.Modules.JobOffers.Core.Entities.JobOffer", b =>
                {
                    b.Navigation("JobApplications");
                });
#pragma warning restore 612, 618
        }
    }
}
